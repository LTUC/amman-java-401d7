/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package httprequsetandresponseinjava;

import com.google.gson.Gson;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.*;
import static org.powermock.api.mockito.PowerMockito.whenNew;

@RunWith(PowerMockRunner.class)
@PrepareForTest({App.class, URL.class, HttpURLConnection.class, BufferedReader.class, Gson.class, FileWriter.class})
class AppTest {
    @Test
    public void testFetchAndSerializePokemonData_Success() throws Exception {
        // Arrange
        URL pokeUrl = new URL("https://pokeapi.co/api/v2/pokemon/ditto");
        HttpURLConnection pokeUrlConnection = (HttpURLConnection) pokeUrl.openConnection();
        pokeUrlConnection.setRequestMethod("GET");

        InputStreamReader reader = new InputStreamReader(pokeUrlConnection.getInputStream());
        BufferedReader pokeBufferReader = new BufferedReader(reader);
        String pokeData = pokeBufferReader.readLine();

        Gson gson = new Gson();
        Pokemon actualPokemon = gson.fromJson(pokeData, Pokemon.class);

        File dittoFile = new File("D:\\Gradle projects\\HTTPRequsetAndResponseInJava\\app\\src\\main\\resources\\ditto.json");
        FileWriter fileWriter = new FileWriter(dittoFile);

        // Act
        gson.toJson(actualPokemon, fileWriter);
        fileWriter.close();

        // Assert
        String expectedName = "ditto";
        assertEquals(expectedName, actualPokemon.name);
    }
}
